source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
View(make_introduction)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/Assignment.r", echo=TRUE)
source("~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/36cf1ca49b35328a1875d6c2151a8360/Message/MessageTemp/7e3926a913856079ec3b94e671612a1c/File/xuzhao.r", echo=TRUE)
View(make_introduction)
source("~/Desktop/info201/a1---foundational-skills-Dylanhua/HW1info201.r", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
colors(1)
colors(1)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
clear
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
source("~/Desktop/info201/Week4Mon.R", echo=TRUE)
clear
install.packages("tidyverse")
install.packages("dplyr")
install.packages("pscl")
library(pscl)
library(dplyr)
presidentialElections
pe_df <- presidentialElections
view(pe_df)
View(pe_df)
sorted_df <- arrange(pe_df, year)
View(sorted_df)
View(pe_df)
sorted_df <- arrange(pe_df, -year)
View(sorted_df)
filter(pe_df, year== 2008)
mutate(pe_df, test= "test")
names_df <- read.csv("female_names.csv")
names_df <- read.csv("/users/Desktop/info201/female_names.csv")
names_df <- read.csv("/xiaohuahua/Desktop/info201/female_names.csv")
names_df <- read.csv("/Xiaohuahua/Desktop/info201/female_names.csv")
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
ans
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
View(ans)
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
ans
ans
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
# 4) Write a function `most_popular_in_year` that takes in a year as a value and returns the most popular name in that year
#most_pop_in_year <- function(yr){
#  names_yr_df <- names_df[names_df$year == yr, ]
#  max_pop <- max(names_yr_df$prop)
#  return(names_yr_df[names_yr_df$prop == max_pop, "name"])}
most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- max(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
ans
print(most_pop_in_year(2013))
print(most_pop_in_year(1996))
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
# 4) Write a function `most_popular_in_year` that takes in a year as a value and returns the most popular name in that year
#most_pop_in_year <- function(yr){
#  names_yr_df <- names_df[names_df$year == yr, ]
#  max_pop <- max(names_yr_df$prop)
#  return(names_yr_df[names_yr_df$prop == max_pop, "name"])}
most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- max(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
#quick test case
print(most_pop_in_year(2013))
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
# 4) Write a function `most_popular_in_year` that takes in a year as a value and returns the most popular name in that year
#most_pop_in_year <- function(yr){
#  names_yr_df <- names_df[names_df$year == yr, ]
#  max_pop <- max(names_yr_df$prop)
#  return(names_yr_df[names_yr_df$prop == max_pop, "name"])}
most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- max(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
#quick test case
print(most_pop_in_year(1994))
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
# 4) Write a function `most_popular_in_year` that takes in a year as a value and returns the most popular name in that year
#most_pop_in_year <- function(yr){
#  names_yr_df <- names_df[names_df$year == yr, ]
#  max_pop <- max(names_yr_df$prop)
#  return(names_yr_df[names_yr_df$prop == max_pop, "name"])}
most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- max(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
# 5) write in a comment "What was the most popular female name in 1994?" and answer
print(most_pop_in_year(1994))
# 6) Write a function `number_per_year` that takes in a name and a year, and returns how many babies born that year have that name.
#know how to given a year get df for that year
# names_yr_df <- names_df[names_df$year == yr,]
#can figure out how to get df for just a given name
#just need to combine the  two approaches
#number_per_year <- function(name, yr){
#  names_yr_df <- names_df[names_df$year == yr,]# gets us a df with just that year
#  just_name_df <- names_yr_df[names_yr_df$name == name, "prop"] # gets us a df with just that name for the df with the given year
#  return(just_name_df)}
number_per_year <- function(nm, yr){
ans <- filter(names_df, name == nm)
ans <- filter(ans, year == yr)
ans <- select(ans, prop)
return(ans)}
#test cases
print(number_per_year("Sophia", 2013))
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
when_popular("Sophia")
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
#What was the LEAST popular name in 1994?
least_most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- min(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
print(least_most_pop_in_year(1994))
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
library(dplyr)
# 1) Read in the female baby names data file into a variable called `names`
names_df <- read.csv("/Users/Xiaohuahua/Desktop/info201/female_names.csv")
# 2) Create a data frame `names_2013` that contains only the rows for the year 2013
#names_2013_df <- names_df[names_df$year == 2013,]
names_2013_df <- filter(names_df, year == 2013)
# 3) write in a comment the question "What was the most popular female name in 2013?" and answer.
max_pop <- max(names_2013_df$prop)
#name_2013 <- names_2013_df[names_2013_df$prop == max_pop, "name"]
ans <- filter(names_2013_df, prop == max_pop)
ans <- select(ans, name)
# 4) Write a function `most_popular_in_year` that takes in a year as a value and returns the most popular name in that year
#most_pop_in_year <- function(yr){
#  names_yr_df <- names_df[names_df$year == yr, ]
#  max_pop <- max(names_yr_df$prop)
#  return(names_yr_df[names_yr_df$prop == max_pop, "name"])}
most_pop_in_year <- function(yr){
names_yr_df <- filter(names_df, year == yr)
max_pop <- max(names_yr_df$prop)
ans <- filter(names_yr_df, prop == max_pop)
ans <- select(ans, name)
return(ans)
}
print(most_pop_in_year(2013))
# 5) write in a comment "What was the most popular female name in 1994?" and answer
print(most_pop_in_year(1994))
# Before being coding, you should first familiarize yourself with the dataset.
# Start by analyzing the meaning of each coloumn in the dataset.
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
View(titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
view(children)
View(children)
View(Children)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
View(children)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
View(children)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate_("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate_("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate_("Crew", titanic_df)
survival_rate("Crew", titanic_df)
survival_rate("Crew", titanic_df
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df
survival_rate("Crew", titanic_df)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df
survival_rate("Crew", titanic_df)
survivak_rate("Crew", titanic_df)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survivak_rate("Crew", titanic_df)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate("Crew", titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
most_lost
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
View(lost)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/Lec7HW.R", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
View(most_lost)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
survival_rate(Crew,titanic_df)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
source("~/Desktop/info201/lab5.r", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE, results = "hide", eval=FALSE)
install.packages('tinytex')
remotes::install_github('rstudio/tinytex')
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
View(statepop)
View(my_data)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
source("~/Desktop/info201/Week7Lec.R", echo=TRUE)
install.packages("shiny")
source("~/Desktop/info201/app.r", echo=TRUE)
runApp('Desktop/info201')
runApp('Desktop/info201')
runApp('Desktop/info201')
runApp('Desktop/info201')
runApp('Desktop/info201')
View(names_2013_df)
runApp('Desktop/info201')
View(pe_df)
knitr::opts_chunk$set(echo = TRUE, results = "hide", eval=FALSE)
setwd("~/Desktop/info201_Final_project")
shiny::runApp()
runApp()
source("~/Desktop/ExploratoryDataAnalysis/Bar_chart.R", echo=TRUE)
setwd("~/Desktop/info201_Final_project")
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
runApp()
plot_ly(data = df_group_price, x = ~Avg..Area.House.Age, y = ~Area.Population,
text = ~Address, type = "bar")%>%
layout(title = "Population In Different House Age", plot_bgcolor = "#e5ecf6")
source("~/Desktop/ExploratoryDataAnalysis/Bar_chart.R", echo=TRUE)
source("~/Desktop/ExploratoryDataAnalysis/Bar_chart.R", echo=TRUE)
source("~/Desktop/ExploratoryDataAnalysis/Bar_chart.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
df_group_price <- char_df %>% group_by(Avg..Area.House.Age) %>%
summarise(total_population = round(sum(Area.Population)))
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
runApp()
char_df <- read.csv("USA_Housing.csv")
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
runApp()
runApp()
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
source("~/Desktop/info201_Final_project/test_bar.R", echo=TRUE)
runApp()
library(dplyr)
library(fmsb)
library(shinyWidgets)
library(ggplot2)
library(plotly)
char_df <- read.csv("USA_Housing.csv")
char_df$Avg..Area.House.Age <- round(char_df$Avg..Area.House.Age)
char_df$Price <- round(char_df$Price)
df_group_price <- char_df %>% group_by(Avg..Area.House.Age) %>%
summarise(total_population = round(sum(Area.Population)))
filter_df <- filter(df_group_price, Avg..Area.House.Age == 6)
plot_ly(data = filter_df, x = ~Avg..Area.House.Age, y = ~total_population,
type = "bar")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
